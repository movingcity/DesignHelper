<UserControl x:Class="ResourcesClient.Controls.ResourcesGantt"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ph="clr-namespace:PlexityHide.GTP;assembly=PlexityHide.GTP.WPF"
             xmlns:lozenge="clr-namespace:ResourcesClient.Controls"
             xmlns:conv="clr-namespace:ResourcesClient.Controls.Converters"
             xmlns:local="clr-namespace:ResourcesClient.Controls"
             x:Name="resourcesGantt"
             PreviewKeyDown="resourcesGantt_PreviewKeyDown"
             PreviewMouseDown="resourcesGantt_PreviewMouseDown"
             SizeChanged="resourcesGantt_SizeChanged"
             Loaded="resourcesGantt_Loaded">
    <Grid x:Name="LayoutRoot" >
        <Grid.Resources>
            <!-- converters -->
            <conv:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <conv:DateToStringConverter x:Key="DateToStringConverter" />
            <conv:WidthToLocationConverter x:Key="WidthToLocationConverter" />
            <conv:GanttItemsSourceConverter x:Key="GanttItemsSourceConverter" />
            <conv:NullImageConverter x:Key="NullImageConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            
            <!-- brush resources -->
            <SolidColorBrush x:Key="SolidBorderBrush" Color="#FF7F9DB9" />
            
            <!-- image resources -->
            <Image x:Key="RightArrow" Source="Images/rightarrow.png">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                </Image.LayoutTransform>
            </Image>
            <Image x:Key="LeftArrow" Source="Images/leftarrow.png">
                <Image.LayoutTransform>
                    <ScaleTransform ScaleX="0.75" ScaleY="0.75" />
                </Image.LayoutTransform>
            </Image>
            <Image x:Key="ZoomImage" Source="Images/zoom.png" />
            
            <!-- gantt button styles -->
            <Style x:Key="GanttButton" TargetType="{x:Type Button}">
                <Setter Property="Margin" Value="1" />
                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}" >
                            <Border Name="border" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}" BorderThickness="1.5" BorderBrush="Blue" 
                                    Padding="2" CornerRadius="2">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Margin}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border"  Property="BorderBrush" Value="#FF316AC5" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                                    <Setter TargetName="border" Property="Background" Value="#FFC1D2EE" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="GanttRepeatButton" TargetType="{x:Type RepeatButton}">
                <Setter Property="Margin" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}" >
                            <Border Name="border" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}" BorderThickness="1.5" BorderBrush="Blue" 
                                    Padding="2" CornerRadius="2">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Margin}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border"  Property="BorderBrush" Value="#FF316AC5" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="1.5" />
                                    <Setter TargetName="border" Property="Background" Value="#FFC1D2EE" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Simplified style for ListBoxItems displated in the Gantt List Box
                 copied from WPF default style for ListBox -->
            <Style x:Key="SimpleListBoxItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0,0,0,1"
                                    Padding="0" Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" 
                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=EvenRowColor, Converter={StaticResource ColorToBrushConverter}}" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background"
                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=OddRowColor, Converter={StaticResource ColorToBrushConverter}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!-- Simplified style for ListBoxItems displayed in Scratch and Misc gantts -->
            <Style x:Key="SimpleListBoxItem2" TargetType="{x:Type ListBoxItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border" BorderBrush="{StaticResource SolidBorderBrush}" BorderThickness="0"
                                    Padding="0" 
                                    Background="{TemplateBinding Background}"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- Simplified style for ListBox, removes extra chrome not required for gantt display 
                 copied from WPF default style for ListBox -->
            <Style x:Key="SimpleListBox" TargetType="{x:Type ListBox}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- style for the context popup menu for resources and tasks -->
            <Style x:Key="ContextMenuStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="MenuItem.Header" Value="{Binding Header}"/>
                <Setter Property="MenuItem.ItemsSource" Value="{Binding Items}"/>
                <Setter Property="MenuItem.Icon" Value="{Binding Icon}" />
                <Setter Property="MenuItem.IsCheckable" Value="{Binding IsCheckable}"/>
                <Setter Property="MenuItem.IsChecked" Value="{Binding IsChecked}"/>
                <Setter Property="MenuItem.Command" Value="{Binding Command}"/>
                <Setter Property="MenuItem.CommandParameter" 
                                                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, 
                                            Path=PlacementTarget.DataContext.Payload}" />
                <Setter Property="MenuItem.Visibility" Value="{Binding Visible, 
                                            Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Setter Property="MenuItem.ToolTip" Value="{Binding ToolTip}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSeparator}" Value="true">
                        <Setter Property="MenuItem.Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type MenuItem}">
                                    <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <!-- visual layout style for a task (timeitem) within the GanttRow listbox -->
            <DataTemplate x:Key="TaskTimeItem">
                <ph:TimeItem Identity="{Binding Id}"
                                     Start="{Binding Start,Mode=Twoway}"
                                     Stop="{Binding Stop,Mode=Twoway}"
                                     TimeItemSizedFrameworkElementName="Lozenge"
                                     AllowResizeEast="True" AllowResizeWest="True" AllowMove="False">
                    <lozenge:Lozenge x:Name="Lozenge"
                            AllowedLines="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=AllowedLines}"
                            IsChecked="{Binding IsSelected}"
                            BackColor="{Binding BackColor}"
                            BorderBrush="{Binding BorderBrush}"
                            BorderThickness="{Binding BorderThickness}"
                            BoundKey="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=TaskBoundKey}"
                            Panel.ZIndex="100"
                            HighLightColor="{Binding HighlightColor}"
                            LabelR1C1="{Binding TextR1C1}"
                            LabelR1C2="{Binding TextR1C2}"
                            LabelR1C3="{Binding TextR1C3}"
                            LabelR2C1="{Binding TextR2C1}"
                            LabelR2C2="{Binding TextR2C2}"
                            LabelR2C3="{Binding TextR2C3}"
                            LabelR3C1="{Binding TextR3C1}"
                            LabelR3C2="{Binding TextR3C2}"
                            LabelR3C3="{Binding TextR3C3}"
                            LeftShape="{Binding LeftShape}"
                            RightShape="{Binding RightShape}"
                            SelectionBackColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                Path=SelectionBackColor}"
                            SelectionTextColor="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                Path=SelectionTextColor}"
                            TextColor="{Binding TextColor}"
                            LabelLT1="{Binding TextLT1}"
                            LabelLT2="{Binding TextLT2}"
                            LabelRT1="{Binding TextRT1}"
                            LabelRT2="{Binding TextRT2}"
                            IconSourceL1="{Binding Path=IconSourceL1, Converter={StaticResource NullImageConverter}}"
                            IconSourceL2="{Binding Path=IconSourceL2, Converter={StaticResource NullImageConverter}}"
                            IconSourceL3="{Binding Path=IconSourceL3, Converter={StaticResource NullImageConverter}}"
                            IconSourceR1="{Binding Path=IconSourceR1, Converter={StaticResource NullImageConverter}}"
                            IconSourceR2="{Binding Path=IconSourceR2, Converter={StaticResource NullImageConverter}}"
                            IconSourceR3="{Binding Path=IconSourceR3, Converter={StaticResource NullImageConverter}}"
                            Checked="Lozenge_Checked" Unchecked="Lozenge_Unchecked" MouseLeave="Lozenge_MouseLeave"
                            Loaded="Lozenge_Loaded" MouseEnter="Lozenge_MouseEnter">
                        <lozenge:Lozenge.ContextMenu>
                            <ContextMenu ItemsSource="{Binding ContextMenuItems}" ItemContainerStyle="{StaticResource ContextMenuStyle}" />
                        </lozenge:Lozenge.ContextMenu>
                    </lozenge:Lozenge>
                </ph:TimeItem>
            </DataTemplate>

            <!-- Visual layout style for resources listboxitem -->
            <DataTemplate x:Key="RowInfoTemplate">
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{x:Static local:ResourcesGantt.RESOURCE_HEADER_WIDTH}"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Background="{Binding BackColor}" x:Name="ResourceBorder" MouseLeave="ResourceBorder_MouseLeave"
                            MouseEnter="ResourceBorder_MouseEnter">
                        <TextBlock Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                           Text="{Binding Text}" Background="{Binding BackColor}"
                                           Foreground="{Binding TextColor}" Padding="5,0,0,0" TextWrapping="Wrap"/>
                        <Border.ContextMenu>
                            <ContextMenu ItemsSource="{Binding ContextMenuItems}" ItemContainerStyle="{StaticResource ContextMenuStyle}" />
                        </Border.ContextMenu>
                    </Border>
                    <Canvas Canvas.ZIndex="200">
                        <!-- lozenge height is 64, padding of 1 -->
                        <ph:GanttRow FocusVisualStyle="{x:Null}"
                                   Canvas.Top="0"
                                   Height="66"
                                   VerticalAlignment="Center"
                                   Background="Transparent"
                                   BorderThickness="0"
                                   FollowDateScalerPosition="True"
                                   ItemsSource="{Binding Items}"
                                   ItemTemplate="{StaticResource TaskTimeItem}"
                                   IncreaseRowHeightOnCollision="True"
                                   IncreaseRow_StartHeight="66"
                                   CollisionTimeItemOffset="66"
                                   AllowDrop="True"
                                   OnGanttRowMinHeightChange="GanttRow_OnGanttRowMinHeightChange"
                                   PreviewMouseLeftButtonDown="GanttRow_PreviewMouseLeftButtonDown"
                                   PreviewMouseMove="GanttRow_PreviewMouseMove"
                                   PreviewMouseLeftButtonUp="GanttRow_PreviewMouseLeftButtonUp"
                                   DragEnter="GanttRow_DragEnter"
                                   DragLeave="GanttRow_DragLeave"
                                   DragOver="GanttRow_DragOver"
                                   Drop="GanttRow_Drop"/>
                    </Canvas>
                </Grid>
            </DataTemplate>
            
            <!-- visual layout style for how the task looks like when dragged. Set to look like the original lozenge 
                 AllowedLines property is set from DragAdorner code behind as RelativeSource binding does not work
                 on Adorner -->
            <DataTemplate x:Key="DragTask">
                <lozenge:Lozenge x:Name="Lozenge"
                            IsChecked="{Binding IsSelected}"
                            BackColor="{Binding BackColor}"
                            BorderBrush="{Binding BorderBrush}"
                            BorderThickness="{Binding BorderThickness}"
                            HighLightColor="{Binding HighlightColor}"
                            LabelR1C1="{Binding TextR1C1}"
                            LabelR1C2="{Binding TextR1C2}"
                            LabelR1C3="{Binding TextR1C3}"
                            LabelR2C1="{Binding TextR2C1}"
                            LabelR2C2="{Binding TextR2C2}"
                            LabelR2C3="{Binding TextR2C3}"
                            LabelR3C1="{Binding TextR3C1}"
                            LabelR3C2="{Binding TextR3C2}"
                            LabelR3C3="{Binding TextR3C3}"
                            LeftShape="{Binding LeftShape}"
                            RightShape="{Binding RightShape}"
                            TextColor="{Binding TextColor}"
                            LabelLT1="{Binding TextLT1}"
                            LabelLT2="{Binding TextLT2}"
                            LabelRT1="{Binding TextRT1}"
                            LabelRT2="{Binding TextRT2}"
                            IconSourceL1="{Binding Path=IconSourceL1, Converter={StaticResource NullImageConverter}}"
                            IconSourceL2="{Binding Path=IconSourceL2, Converter={StaticResource NullImageConverter}}"
                            IconSourceL3="{Binding Path=IconSourceL3, Converter={StaticResource NullImageConverter}}"
                            IconSourceR1="{Binding Path=IconSourceR1, Converter={StaticResource NullImageConverter}}"
                            IconSourceR2="{Binding Path=IconSourceR2, Converter={StaticResource NullImageConverter}}"
                            IconSourceR3="{Binding Path=IconSourceR3, Converter={StaticResource NullImageConverter}}" />
            </DataTemplate>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" x:Name="mainGanttRow"/>
            <RowDefinition Height="Auto" x:Name="splitterRow1"/>
            <RowDefinition Height="*" x:Name="scratchGanttRow"/>
            <RowDefinition Height="Auto" x:Name="splitterRow2"/>
            <RowDefinition Height="*" x:Name="miscGanttRow"/>
        </Grid.RowDefinitions>
        
        <!-- main gantt -->
        <Border Grid.Row="0" BorderBrush="LightGray" BorderThickness="2,2,2,0" Background="White" SnapsToDevicePixels="True">
            <ph:Gantt x:Name="mainGantt" TodayLineUse="False" VerticalDayStripesUse="none"
                      OnDrawBackground="Gantt_OnDrawBackground">
                <ph:Gantt.RowDefinitions>
                    <!-- header -->
                    <RowDefinition Height="50" />
                    <!-- gantt -->
                    <RowDefinition />
                </ph:Gantt.RowDefinitions>
                <ph:Gantt.ColumnDefinitions>
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.RESOURCE_HEADER_WIDTH}" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.SCROLL_WIDTH}" />
                </ph:Gantt.ColumnDefinitions>
                
                <!-- command buttons -->
                <Grid Grid.Row="0" Grid.Column="0" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <!-- generic command button -->
                    <Button Grid.Column="0" Style="{StaticResource GanttButton}" VerticalAlignment="Top"
                            Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CmdButtonContent}"
                            Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=CmdButtonCommand}"/>
                    <!-- zoom button -->
                    <Button Grid.Column="1" Style="{StaticResource GanttButton}" Content="{StaticResource ZoomImage}"
                            VerticalAlignment="Top" x:Name="zoomButton" Click="zoomButton_Click"/>
                </Grid>
                
                <!-- date scaler -->
                <Border BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}" SnapsToDevicePixels="True" Grid.Column="1">
                    <ph:DateScaler Background="White" BoxesOnDaysRulerOnTime="False" ReScaleWithControl="False" 
                               x:Name="dateScaler1" SnapsToDevicePixels="True"
                               Serial="CSSILV01301" RTKey="5B223BA788026B651D48FD42561A7C10" 
                               PlusbuttonStyle="{StaticResource GanttRepeatButton}" ScrollButtonPlusContent="{StaticResource RightArrow}"
                               MinusbuttonStyle="{StaticResource GanttRepeatButton}" ScrollButtonMinusContent="{StaticResource LeftArrow}"
                               OnScaleChangeEvent="dateScaler1_OnScaleChangeEvent"/>
                </Border>
                <!-- date scaler date header -->
                <Canvas Grid.Column="1" SnapsToDevicePixels="True">
                    <TextBlock Height="Auto" Margin="0">
                        <TextBlock.Text>
                            <MultiBinding Converter="{StaticResource DateToStringConverter}">
                                <Binding ElementName="dateScaler1" Path="StartTime" />
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type UserControl}}" Path="DateTimeFormat" />
                            </MultiBinding>
                        </TextBlock.Text>
                        <Canvas.Left>
                            <!-- convert to center the date header on the datescaler canvas -->
                            <MultiBinding Converter="{StaticResource WidthToLocationConverter}">
                                <Binding ElementName="dateScaler1" Path="ActualWidth" />
                                <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth" />
                            </MultiBinding>
                        </Canvas.Left>
                    </TextBlock> 
                </Canvas>
                
                <!-- resources listbox -->
                <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ItemContainerStyle="{StaticResource SimpleListBoxItem}"
                         Margin="0" AlternationCount="2" Background="Transparent" ItemTemplate="{StaticResource RowInfoTemplate}"
                         ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, Path=MainSource}"
                         SnapsToDevicePixels="True" Style="{StaticResource SimpleListBox}"
                         x:Name="listBox1"/>

            </ph:Gantt>
        </Border>
        
        <!-- horizontal splitter -->
        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" Height="4" BorderBrush="LightGray"
                      Background="LightGray" VerticalAlignment="Center" PreviewMouseDoubleClick="GridSplitter_PreviewMouseDoubleClick"
                      ResizeBehavior="PreviousAndNext" x:Name="splitter1"/>

        <!-- scratch gantt -->
        <Border Grid.Row="2" BorderBrush="LightGray" BorderThickness="2,0,2,0" Background="White" SnapsToDevicePixels="True">
            <ph:Gantt x:Name="scratchGantt" TodayLineUse="False" VerticalDayStripesUse="none"
                      OnDrawBackground="Gantt_OnDrawBackground">
                <ph:Gantt.RowDefinitions>
                    <!-- header is collapsed. Need to keep a tiny fraction visible
                         in order to allow the gantt row canvas to render background properly -->
                    <RowDefinition Height="0.5" />
                    <!-- gantt -->
                    <RowDefinition />
                </ph:Gantt.RowDefinitions>
                <ph:Gantt.ColumnDefinitions>
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.RESOURCE_HEADER_WIDTH}" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.SCROLL_WIDTH}" />
                </ph:Gantt.ColumnDefinitions>

                <!-- date scaler (collapsed)-->
                <Border BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}" SnapsToDevicePixels="True" Grid.Column="1">
                    <ph:DateScaler BoxesOnDaysRulerOnTime="False" ReScaleWithControl="False" 
                               x:Name="dateScaler2" SnapsToDevicePixels="True"
                               Serial="CSSILV01301" RTKey="5B223BA788026B651D48FD42561A7C10" />
                </Border>
                
                <!-- resources listbox -->
                <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ItemContainerStyle="{StaticResource SimpleListBoxItem2}"
                         Margin="0" ItemTemplate="{StaticResource RowInfoTemplate}"
                         ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
                            Path=ScratchSource, Converter={StaticResource GanttItemsSourceConverter}}"
                         SnapsToDevicePixels="True" Style="{StaticResource SimpleListBox}"
                         Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=ScratchBackColor, Converter={StaticResource ColorToBrushConverter}}"
                         x:Name="listBox2"/>
                
                <Border Grid.Row="1" Grid.Column="0" Background="White" Margin="1">
                    <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Padding="5,0,0,0"
                         Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=ScratchText}" />
                </Border>

            </ph:Gantt>
        </Border>

        <!-- horizontal splitter -->
        <GridSplitter Grid.Row="3" HorizontalAlignment="Stretch" SnapsToDevicePixels="True" Height="4" BorderBrush="LightGray"
                      Background="LightGray" VerticalAlignment="Center" PreviewMouseDoubleClick="GridSplitter_PreviewMouseDoubleClick"
                      ResizeBehavior="PreviousAndNext" x:Name="splitter2"/>

        <!-- misc gantt -->
        <Border Grid.Row="4" BorderBrush="LightGray" BorderThickness="2,0,2,2" Background="White" SnapsToDevicePixels="True">
            <ph:Gantt x:Name="miscGantt" TodayLineUse="False" VerticalDayStripesUse="none"
                      OnDrawBackground="Gantt_OnDrawBackground">
                <ph:Gantt.RowDefinitions>
                    <!-- header is collapsed. Need to keep a tiny fraction visible
                         in order to allow the gantt row canvas to render background properly -->
                    <RowDefinition Height="0.5" />
                    <!-- gantt -->
                    <RowDefinition />
                </ph:Gantt.RowDefinitions>
                <ph:Gantt.ColumnDefinitions>
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.RESOURCE_HEADER_WIDTH}" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="{x:Static local:ResourcesGantt.SCROLL_WIDTH}" />
                </ph:Gantt.ColumnDefinitions>

                <!-- date scaler (collapsed)-->
                <Border BorderThickness="1" BorderBrush="{StaticResource SolidBorderBrush}" SnapsToDevicePixels="True" Grid.Column="1">
                    <ph:DateScaler BoxesOnDaysRulerOnTime="False" ReScaleWithControl="False" 
                               x:Name="dateScaler3" SnapsToDevicePixels="True"
                               Serial="CSSILV01301" RTKey="5B223BA788026B651D48FD42561A7C10" />
                </Border>

                <!-- resources listbox -->
                <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ItemContainerStyle="{StaticResource SimpleListBoxItem2}"
                         Margin="0" ItemTemplate="{StaticResource RowInfoTemplate}"
                         ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=UserControl}, 
                            Path=MiscSource, Converter={StaticResource GanttItemsSourceConverter}}"
                         SnapsToDevicePixels="True" Style="{StaticResource SimpleListBox}"
                         Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=MiscBackColor, Converter={StaticResource ColorToBrushConverter}}"
                         x:Name="listBox3"/>

                <Border Grid.Row="1" Grid.Column="0" Background="White" Margin="1">
                    <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Padding="5,0,0,0"
                         Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=MiscText}" />
                </Border>

            </ph:Gantt>
        </Border>
        
        <!-- misc controls -->
        <!-- zoom slider popup -->
        <Popup x:Name="zoomPopup" PlacementTarget="{Binding ElementName=zoomButton}" Placement="Right" StaysOpen="False"
               PopupAnimation="Slide">
            <Grid Background="{StaticResource SolidBorderBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" VerticalAlignment="Center" Stroke="White" Data="M0,5 H10"  StrokeThickness="2" Height="10" Width="10" 
                      Margin="5,0,5,0"/>
                <Slider Grid.Column="1" Width="120" Interval="1" Orientation="Horizontal" ValueChanged="Slider_ValueChanged" 
                        x:Name="zoomSlider"/>
                <Path Grid.Column="2" VerticalAlignment="Center" Stroke="White" Data="M0,5 H10 M5,5 V10Z"  StrokeThickness="2" Height="10" 
                      Width="10" Margin="5,0,5,0"/>
            </Grid>
        </Popup>
        <!-- task popup -->
        <Popup x:Name="taskPopup" Placement="Right" StaysOpen="False" PopupAnimation="Slide" Focusable="False">
            <Grid Background="{StaticResource SolidBorderBrush}">
                <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Popup}}, 
                                    Path=PlacementTarget.DataContext}"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=TaskPopupDataTemplate}" />
            </Grid>
        </Popup>
        <!-- resource popup -->
        <Popup x:Name="resourcePopup" Placement="Right" StaysOpen="False" PopupAnimation="Slide" Focusable="False">
            <Grid Background="{StaticResource SolidBorderBrush}">
                <ContentPresenter Content="{Binding RelativeSource={RelativeSource AncestorType={x:Type Popup}}, 
                                    Path=PlacementTarget.DataContext.Payload}"
                                  ContentTemplate="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, 
                                    Path=ResourcePopupDataTemplate}" />
            </Grid>
        </Popup>

    </Grid>
</UserControl>
