<UserControl x:Class="ResourcesClient.Controls.NotificationControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ResourcesClient.Controls"
             x:Name="notifyControl">
    <Grid Name="parentGrid" Grid.IsSharedSizeScope="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- grid resources -->
        <Grid.Resources>
            <!-- converter to transform splitter height into a Margin to avoid overlap of splitter and main window -->
            <local:MarginConverter x:Key="marginConverter" />
            <!-- multi-converter to check NotifyState and return appropriate height -->
            <local:HeightMultiConverter x:Key="heightConverter" />
            <!-- style for Button that appears on the notification window title -->
            <Style x:Key="ToolBarButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type  Button}" >
                            <Border Name="border" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}"
                                                  Height="{TemplateBinding Height}" BorderThickness="1" BorderBrush="Transparent" Padding="2">
                                <ContentPresenter Name="content" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Margin}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border"  Property="BorderBrush" Value="#FF316AC5" />
                                    <Setter TargetName="border" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="border" Property="Background" Value="#FFC1D2EE" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- style for TabItem which sets the display style for the notification window tab button -->
            <Style TargetType="{x:Type local:NotifyTabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type  local:NotifyTabItem}">
                            <Grid SnapsToDevicePixels="True">
                                <Border BorderBrush="Black" BorderThickness="1" Padding="0,3,0,0" Margin="0,0,-1,0">
                                    <ContentPresenter Name="buttonText" Margin="3,0,3,0" Content="{TemplateBinding Header}" 
                                                  VerticalAlignment="Bottom" PreviewMouseDown="buttonText_PreviewMouseDown"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- style for the TabControl that is bound to this UserControl. Sets it appear as a notification window -->
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid Name="grid">
                                <Grid.RowDefinitions>
                                    <!-- notification window title -->
                                    <RowDefinition Height="Auto" />
                                    <!-- notification window content. i.e. selected tab item content -->
                                    <RowDefinition Height="*" />
                                    <!-- notification window tab header items -->
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                
                                <!-- notification window title -->
                                <Border Grid.Row="0" Background="White" SnapsToDevicePixels="True" BorderBrush="LightGray"
                                        BorderThickness="0,0,0,1">
                                    <DockPanel Grid.Row="0" SnapsToDevicePixels="True">
                                        <Button Width="20" Name="panePin" DockPanel.Dock="Right" Click="panePin_Click" 
                                            Style="{StaticResource ToolBarButton}">
                                            <Image Name="panePinImage" Source="Images/PinAutoHide.png"/>
                                        </Button>
                                        <TextBlock Padding="2" TextTrimming="CharacterEllipsis" Foreground="Black" DockPanel.Dock="Left" 
                                               Name="notifyHeader"/>
                                    </DockPanel>
                                </Border>

                                <!-- notification window content area -->
                                <Border Background="#FFE9ECEF" Grid.Row="1" SnapsToDevicePixels="True" />
                                <ContentPresenter Content="{TemplateBinding SelectedContent}" Grid.Row="1" Margin="0,0,0,0" 
                                                  SnapsToDevicePixels="True"/>

                                <!-- notification window buttons -->
                                <Border Grid.Row="2" Background="White" HorizontalAlignment="Stretch" 
                                        Margin="-1,-1,-1,-1" Name="border" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" x:Name="PART_TabPanel" Grid.Row="2" Margin="0,0,0,0" 
                                                SnapsToDevicePixels="True" Orientation="Horizontal"/>
                                </Border>

                                <!-- notification window border -->
                                <Border Grid.Row="0" Grid.RowSpan="2" BorderBrush="Black" BorderThickness="1" SnapsToDevicePixels="True"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- style for the grid splitter -->
            <Style TargetType="{x:Type GridSplitter}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" Name="splitterBorder">
                                <Canvas RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True" Name="splitterCanvas"
                                   Height="10" VerticalAlignment="Center"
                                   Width="50" HorizontalAlignment="Center">
                                    <Line X1="0" X2="50" Y1="4" Y2="4"
                                     Stroke="White" StrokeThickness="1"/>
                                    <Line X1="0" X2="50" Y1="5" Y2="5"
                                     Stroke="#A0A0A0" StrokeThickness="1"/>
                                    <Line X1="0" X2="50" Y1="7" Y2="7"
                                     Stroke="White" StrokeThickness="1"/>
                                    <Line X1="0" X2="50" Y1="8" Y2="8"
                                     Stroke="#A0A0A0" StrokeThickness="1"/>
                                </Canvas>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="{x:Null}">
                                    <Setter TargetName="splitterCanvas" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="splitterBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="splitterBorder" Property="BorderThickness" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        
        <!-- main content grid -->
        <Grid Name="layer0" Grid.Row="0" Margin="0,0,0,2" PreviewMouseDown="layer0_PreviewMouseDown">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="{Binding ElementName=notifyControl, Path=MainContentMinHeight}"/>
                <!-- extra row definition added dynamically in code behind -->
            </Grid.RowDefinitions>
            <ContentControl Grid.Row="0" Content="{Binding ElementName=notifyControl, Path=MainContent}" Margin="0,0,0,0"/>
        </Grid>

        <!-- notification window grid -->
        <Grid Name="layer1" Visibility="Visible" Grid.Row="0" Margin="0,0,0,-1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" MinHeight="{Binding ElementName=notifyControl, Path=MainContentMinHeight}"/>
                <RowDefinition SharedSizeGroup="row1" Height="Auto" MinHeight="{Binding ElementName=notifyControl, Path=NotifyContentMinHeight}"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" SnapsToDevicePixels="True">
                <Border.Margin>
                    <MultiBinding Converter="{StaticResource marginConverter}">
                        <Binding ElementName="notifyControl"  Path="SplitterHeight" />
                        <Binding ElementName="notifyControl" Path="NotifyState" />
                    </MultiBinding>
                </Border.Margin>
                <!-- notification window content -->
                <ContentControl Content="{Binding ElementName=notifyControl, Path=NotifyContent}" Name="notifyContent" SnapsToDevicePixels="True"/>
            </Border>
            <GridSplitter Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" 
                          SnapsToDevicePixels="True" DragDelta="GridSplitter_DragDelta" 
                          BorderBrush="Black" BorderThickness="0,1,0,0" Name="gridSplitter">
                <GridSplitter.Height>
                    <MultiBinding Converter="{StaticResource heightConverter}">
                        <Binding ElementName="notifyControl"  Path="SplitterHeight" />
                        <Binding ElementName="notifyControl" Path="NotifyState" />
                    </MultiBinding>
                </GridSplitter.Height>
            </GridSplitter>
        </Grid>

        <!-- panel used to show the notification window collapsed buttons -->
        <StackPanel Grid.Row="1" Name="bottomPanel">
            <!-- content added dynamically -->
        </StackPanel>
        
    </Grid>
    
</UserControl>
